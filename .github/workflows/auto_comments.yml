name: Auto-comment on PR
on:
  pull_request:
    types: [opened]

jobs:
  comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # More restrictive permission
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Caching Node.js modules
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Gather PR details
      id: pr_details
      run: |
        # Extract PR details from GitHub event payload
        PR_ID=$(jq -r ".pull_request.number" "$GITHUB_EVENT_PATH") || exit 1
        PR_AUTHOR=$(jq -r ".pull_request.user.login" "$GITHUB_EVENT_PATH") || exit 1
        PR_BRANCH=$(jq -r ".pull_request.head.ref" "$GITHUB_EVENT_PATH") || exit 1
        FILES_LINKED=""
        REPO_URL="https://github.com/${{ github.repository }}/blob/$PR_BRANCH"

        for i in {1..3}; do
          # Fetch labels and changed files
          LABELS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_ID \
            | jq -r '.labels[] | .name' | xargs) && break || sleep 15
          FILES_CHANGED=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_ID/files \
            | jq -r '.[] | .filename' | xargs) && break || sleep 15
        done

        for file in $FILES_CHANGED; do
          FILES_LINKED="$FILES_LINKED- [$file]($REPO_URL/$file)\n"
        done

        echo "PR_ID=$PR_ID" >> $GITHUB_ENV
        echo "PR_AUTHOR=$PR_AUTHOR" >> $GITHUB_ENV
        echo "FILES_LINKED=$FILES_LINKED" >> $GITHUB_ENV
        echo "LABELS=$LABELS" >> $GITHUB_ENV

    - name: Run Linter
      run: |
        npm install
        eslint ${{ env.FILES_CHANGED }}

    - name: Set Workflow Status
      run: echo "WORKFLOW_STATUS=success" >> $GITHUB_ENV
      if: success()

    - name: Error Handling
      if: failure()
      run: |
        echo "WORKFLOW_STATUS=failure" >> $GITHUB_ENV
        echo "An error occurred. Check the logs for details."

    - name: Add comment to PR
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          Hey @${{ env.PR_AUTHOR }},
          - **PR Number**: [#${{ env.PR_ID }}](https://github.com/${{ github.repository }}/pull/${{ env.PR_ID }})
          - **Labels**: ${{ env.LABELS }}
          - **Workflow Status**: ${{ env.WORKFLOW_STATUS }}

          **Files Changed:**
          ```
          ${{ join(env.FILES_LINKED, '') }}
          ```

          Please ensure all tests and checks are passed. We'll be reviewing it shortly.
          For more details, please check [our contribution guide](https://github.com/${{ github.repository }}/blob/main/CONTRIBUTING.md).
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
